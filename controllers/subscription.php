<?php//No direct access to the filedefined('_JEXEC') or die;class ItineraryControllerSubscription extends JControllerForm{	public function __construct()	{		parent::__construct();		$this->registerTask('payment','payment');                $this->registerTask('order','order');		$this->registerTask('associatecard','associatecard');                $this->registerTask('associateiban','associateiban');		$this->registerTask('discardmeansofpayment','discardmeansofpayment');	}		protected function allowEdit($data = array(), $key='clef')	{		return parent::allowEdit($data, $key);	}		public function getModel($name = 'Subscription', $prefix = 'ItineraryModel', $config = array('ignore_request' => true))	{		$model = parent::getModel($name, $prefix, $config);				return $model;	}		public function edit($key = null, $urlVar = null)	{		return false;	}                		public function associateCard()	{		//Include the Stripe Library		define('__ROOT__', $_SERVER['DOCUMENT_ROOT'] );		require_once(__ROOT__.'/libraries/stripe-php/init.php');		\Stripe\Stripe::setApiKey("sk_test_z0J9ztS4FFBddItntsNbduUE");				$model=$this->getModel();				$idCustomer = $model->getUserCusId();		$customer = \Stripe\Customer::retrieve($idCustomer);				$app=JFactory::getApplication();		$token = $app->input->post->getString('stripeToken');		$cardHolderName = $app->input->post->getString('cardholder-name');				$newCard=$customer->sources->create(array("source" => $token));				$customer->default_source = $newCard->id;		$customer->save();				$newCard->name = $cardHolderName;		$newCard->save();				$this->setRedirect(			JRoute::_('index.php?option=com_itinerary&view=subscription&layout=card'),JText::_('COM_ITINERARY_CARD_ASSOCIATE_LABEL')		);	}		public function discardMeansOfPayment()	{		//Include the Stripe Library		define('__ROOT__', $_SERVER['DOCUMENT_ROOT'] );		require_once(__ROOT__.'/libraries/stripe-php/init.php');		\Stripe\Stripe::setApiKey("sk_test_z0J9ztS4FFBddItntsNbduUE");				$model=$this->getModel();				$idCustomer = $model->getUserCusId();		$customer = \Stripe\Customer::retrieve($idCustomer);				if(isset($customer) && !isset($customer->deleted))		{			$customer->sources->retrieve($customer->default_source)->delete();		}				$this->setRedirect(			JRoute::_('index.php?option=com_itinerary&view=subscription&layout=card')		);	}                public function associateIban()	{		//Include the Stripe Library		define('__ROOT__', $_SERVER['DOCUMENT_ROOT'] );		require_once(__ROOT__.'/libraries/stripe-php/init.php');		\Stripe\Stripe::setApiKey("sk_test_z0J9ztS4FFBddItntsNbduUE");				$model=$this->getModel();				$idCustomer = $model->getUserCusId();                                		$customer = \Stripe\Customer::retrieve($idCustomer);				$app=JFactory::getApplication();		$token = $app->input->post->getString('stripeToken');		$ibanHolderName = $app->input->post->getString('ibanholdername');				$newIban=$customer->sources->create(array("source" => $token));				$customer->default_source = $newIban->id;		$customer->save();				$newIban->name = $ibanHolderName;		$newIban->save();				$this->setRedirect(			JRoute::_('index.php?option=com_itinerary&view=subscription&layout=card')		);	}			public function payment()	{		$model=$this->getModel();		define('__ROOT__', $_SERVER['DOCUMENT_ROOT'] ); 		$app=JFactory::getApplication();		//Include the Stripe Library		require_once(__ROOT__.'/libraries/stripe-php/init.php');				//Charges the client's card		// Set your secret key: remember to change this to your live secret key in production		// See your keys here: https://dashboard.stripe.com/account/apikeys		\Stripe\Stripe::setApiKey("sk_test_z0J9ztS4FFBddItntsNbduUE");				// Token is created using Stripe.js or Checkout!		// Get the payment token submitted by the form:		$token = $app->input->post->getString('stripeToken');		$cardRemenberValue = $app->input->post->getInt('cardRemenberValue');		$cardHolderName = $app->input->post->getString('cardholder-name');				$dureeAbonnement = $_SESSION['dureeAbonnement'];		$amount = $_SESSION['amount'];		$idParcours = $app->getUserState('idParcours');		$idCustomer = $model->getUserCusId();		$customer = \Stripe\Customer::retrieve($idCustomer);				$user=JFactory::getUser()->id;				if(isset($cardRemenberValue))		{                    $newSource=$customer->sources->create(array("source" => $token));		                    $customer->default_source = $newSource->id;                    $customer->save();                    $newSource->name = $cardHolderName;                    $newSource->save();		}						if(ItineraryHelper::getParcoursPriceAccess()==1)		{                    ItineraryHelper::createUserAccount();		}				$userCountry = $model->getUserCountry();                //$currency = $model->getCurrency($userCountry);                $currency = "EUR";		$metadata = array("user_id"=>$user,"customer_id"=>$idCustomer,"parcours_id"=>$idParcours,"duree_abonnement"=>$dureeAbonnement);		// Charge the Customer instead of the card:		$charge = \Stripe\Charge::create(array(                    "amount" => $amount,                    "currency" => $currency,                    "description" => "Abonnement parcours",                    "metadata" => $metadata,                    "customer" => $customer->id		));				if(isset($cardRemenberValue)&&$cardRemenberValue==0)		{                    $customer->sources->retrieve($newSource->id)->delete();		}		if($charge->status=="succeeded")		{                                       if($model->registerTransaction())                    {                        $invoice=$model->getDocument();                        //$model->getDocument();                        $model->sendDocument($invoice);                        //$_SESSION = array();                        if(!isset($_SESSION['clefSubscription']))                        {                            $itineraryModel = JModelLegacy::getInstance('Itinerary', 'ItineraryModel');                            $itineraryModel->setParcoursActivation("1");                            $itineraryModel->activateParcours();                            $this->setRedirect(			                                //JRoute::_('index.php?view=messages&layout=edit&clef='.$idParcours, false),JText::_('COM_ITINERARY_PAYMENT_SUCCEEDED_GROUND_SUBSCRIPTION')                                    JRoute::_('index.php?option=com_itinerary&view=messages&layout=default&clef='.$idParcours.', false')                                );                        }                        else                        {                            $this->setRedirect(			                                str_replace('gestion-des-parcours','mon-compte/abonnements',JRoute::_('index.php?view=subscriptions', false))                            );                        }                    }                    else                    {                        $this->setRedirect(			                            JRoute::_('index.php?option=com_itinerary&view=subscription&layout=payment'),JText::_('COM_ITINERARY_RESGISTRATION_FAILED'),'error'                        );                    }		}		else		{                    $this->setRedirect(			                        JRoute::_('index.php?option=com_itinerary&view=subscription&layout=payment'),JText::_('COM_ITINERARY_PAYMENT_FAILED'),'error'                    );		}	}                        public function order()	{		$model=$this->getModel();		define('__ROOT__', $_SERVER['DOCUMENT_ROOT'] ); 		$app=JFactory::getApplication();		//Include the Stripe Library		require_once(__ROOT__.'/libraries/stripe-php/init.php');				$idParcours = $app->getUserState('idParcours');                    if($model->registerTransaction("Order"))                    {                                               $order=$model->getDocument("Order");                        $model->sendDocument($order,"Order");                        $_SESSION = array();                        if(!isset($_SESSION['clefSubscription']))                        {                            $itineraryModel = JModelLegacy::getInstance('Itinerary', 'ItineraryModel');                            //$itineraryModel->setParcoursActivation("1");                            //$itineraryModel->activateParcours();                            $this->setRedirect(			                                //JRoute::_('index.php?view=messages&layout=edit&clef='.$idParcours, false),JText::_('COM_ITINERARY_PAYMENT_SUCCEEDED_GROUND_SUBSCRIPTION')                                    JRoute::_('index.php?option=com_itinerary&view=messages&layout=default&clef='.$idParcours.', false')                                );                        }                        else                        {                            $this->setRedirect(			                                str_replace('gestion-des-parcours','mon-compte/abonnements',JRoute::_('index.php?view=subscriptions', false))                            );                        }                    }                    else                    {                        $this->setRedirect(			                            JRoute::_('index.php?option=com_itinerary&view=subscription&layout=payment_iban'),JText::_('COM_ITINERARY_RESGISTRATION_FAILED'),'error'                        );                    }	}}